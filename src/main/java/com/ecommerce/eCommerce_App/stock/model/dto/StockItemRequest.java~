package com.ecommerce.eCommerce_App.stock.model.dto;

import jakarta.validation.constraints.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.time.LocalDate;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class StockItemRequest {
    @NotNull(message = "Quantity is required")
    @Min(value = 1, message = "Quantity must be at least 1")
    private Integer quantity;

    @NotNull(message = "Buying price is required")
    @DecimalMin(value = "0.01", message = "Buying price must be at least 0.01")
    @DecimalMax(value = "999999.99", message = "Buying price must be less than or equal to 999999.99")
    private BigDecimal buyingPrice;

    @NotNull(message = "Expiration date is required")
    @Future(message = "Expiration date must be in the future")
    private LocalDate expirationDate;
}
